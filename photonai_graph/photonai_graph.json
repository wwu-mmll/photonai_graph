{
   "GraphMeasureTransform":[
      "photonai_graph.GraphMeasureTransform.GraphMeasureTransform",
      "Transformer"
   ],
   "GraphConstructorKNN":[
      "photonai_graph.GraphConstruction.graph_constructor_knn.GraphConstructorKNN",
      "Transformer"
   ],
   "GraphConstructorSpatial":[
      "photonai_graph.GraphConstruction.graph_constructor_spatial.GraphConstructorSpatial",
      "Transformer"
   ],
   "GraphConstructorRandomWalks": [
      "photonai_graph.GraphConstruction.graph_constructor_random_walks.GraphConstructorRandomWalks",
      "Transformer"
   ],
   "GraphConstructorThreshold":[
      "photonai_graph.GraphConstruction.graph_constructor_threshold.GraphConstructorThreshold",
      "Transformer"
   ],
   "GraphConstructorPercentage":[
      "photonai_graph.GraphConstruction.graph_constructor_percentage.GraphConstructorPercentage",
      "Transformer"
   ],
    "GraphConstructorThresholdWindow":[
      "photonai_graph.GraphConstruction.graph_constructor_threshold_window.GraphConstructorThreshold",
      "Transformer"
   ],
   "GraphConstructorPercentageWindow":[
      "photonai_graph.GraphConstruction.graph_constructor_percentage_window.GraphConstructorPercentage",
      "Transformer"
   ],
   "GraphEmbeddingGraphFactorization":[
      "photonai_graph.GraphEmbedding.graph_embedding_graph_factorization.GraphEmbeddingGraphFactorization",
      "Transformer"
   ],
   "GraphEmbeddingHOPE":[
      "photonai_graph.GraphEmbedding.graph_embedding_hope.GraphEmbeddingHOPE",
      "Transformer"
   ],
   "GraphEmbeddingLaplacianEigenmaps":[
      "photonai_graph.GraphEmbedding.graph_embedding_laplacian_eigenmaps.GraphEmbeddingLaplacianEigenmaps",
      "Transformer"
   ],
   "GraphEmbeddingLocallyLinearEmbedding":[
      "photonai_graph.GraphEmbedding.graph_embedding_locally_linear_embedding.GraphEmbeddingLocallyLinearEmbedding",
      "Transformer"
   ],
   "GraphEmbeddingSDNE":[
      "photonai_graph.GraphEmbedding.graph_embedding_sdne.GraphEmbeddingSDNE",
      "Transformer"
   ],
   "GATClassifier":[
      "photonai_graph.NeuralNets.NNClassifier.gat_classifier.GATClassifierModel",
      "Estimator"
   ],
   "GCNClassifier":[
      "photonai_graph.NeuralNets.NNClassifier.gcn_classifier.GCNClassifierModel",
      "Estimator"
   ],
   "SGCClassifier":[
      "photonai_graph.NeuralNets.NNClassifier.sgc_classifier.SGConvClassifierModel",
      "Estimator"
   ],
   "GATRegressor": [
      "photonai_graph.NeuralNets.NNRegressor.gat_regressor.GATRegressorModel",
      "Estimator"
   ],
   "GCNRegressor": [
      "photonai_graph.NeuralNets.NNRegressor.gcn_regressor.GCNRegressorModel",
      "Estimator"
   ],
   "SGCRegressor": [
      "photonai_graph.NeuralNets.NNRegressor.sgc_regressor.SGCRegressorModel",
      "Estimator"
   ],
   "GrakelAdapter": [
      "photonai_graph.GraphKernels.grakel_adapter.GrakelAdapter",
      "Transformer"
   ],
   "VertexHistogram": [
      "grakel.VertexHistogram",
      "Transformer"
   ],
   "EdgeHistogram": [
      "grakel.EdgeHistogram",
      "Transformer"
   ],
   "ShortestPath": [
      "grakel.ShortestPath",
      "Transformer"
   ],
   "GraphletSampling": [
      "grakel.GraphletSampling",
      "Transformer"
   ],
   "RandomWalk": [
      "grakel.RandomWalk",
      "Transformer"
   ],
   "NeighborhoodHash": [
      "grakel.NeighborhoodHash",
      "Transformer"
   ],
   "WeisfeilerLehman": [
      "grakel.WeisfeilerLehman",
      "Transformer"
   ],
   "NeighborhoodSubgraphPairwiseDistance": [
      "grakel.NeighborhoodSubgraphPairwiseDistance",
      "Transformer"
   ],
   "LovaszTheta": [
      "grakel.LovaszTheta",
      "Transformer"
   ],
   "SvmTheta": [
      "grakel.SvmTheta",
      "Transformer"
   ],
   "OddSth": [
      "grakel.OddSth",
      "Transformer"
   ],
   "GraphHopper": [
      "grakel.GraphHopper",
      "Transformer"
   ],
   "Propagation": [
      "grakel.Propagation",
      "Transformer"
   ],
   "PyramidMatch": [
      "grakel.PyramidMatch",
      "Transformer"
   ],
   "SubgraphMatching": [
      "grakel.SubgraphMatching",
      "Transformer"
   ],
   "MultiscaleLaplacian": [
      "grakel.MultiscaleLaplacian",
      "Transformer"
   ],
   "CoreFramework": [
      "grakel.CoreFramework",
      "Transformer"
   ],
   "CofluctTransform": [
      "photonai_graph.DynamicUtils.cofluct_transform.CofluctTransform",
      "Transformer"
   ]
}
